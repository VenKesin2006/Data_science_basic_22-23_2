import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
import pandas as pd

x = [11.5, 9.5, 11, 13.5, 17, 15.3, 14.5, 3.7, 5.4, 7.5]
y = [16.5, 15.5, 14.5, 7.5, 6.8, 5.6, 5, 7, 4.7, 4.3]

plt.figure(figsize = (12, 8), dpi = 80)
plt.scatter(x,y, s = 100)

for i, txt in enumerate(zip(x, y)):
    plt.annotate(txt, (x[i], y[i]))
    
    
a = pd.DataFrame({"X": x, "Y": y})
print(a)
SSE = []

for i in range(1, 10):
  kmn = KMeans(i);
  kmn.fit(a)
  SSE.append(kmn.inertia_)

plt.plot(range(1,10), SSE, marker = 's');
plt.xlabel('Clusters')
plt.title("Elbow method")
plt.ylabel('SSE');
plt.show()


from yellowbrick.cluster import SilhouetteVisualizer
fig, ax = plt.subplots()

for i in range (1, 2):
  kmn = KMeans(i)
  kmn.fit(dt.values)

visualizer = SilhouetteVisualizer(km, colors='yellowbrick')

plt.xlabel('x')
plt.ylabel('y')
plt.xlabel("Clusters")
plt.title("Shadow")
visualizer.fit(a)



X = {"x" : pd.Series(x), "y" : pd.Series(y)}
X = pd.DataFrame(X)

kmeans = KMeans(n_clusters=3)
kmeans.fit(X)
Y_pred = kmeans.labels_
X['cluster'] = Y_pred

plt.plot(X[X['cluster']==0]['x'], X[X['cluster']==0]['y'], 'bo', label='class1')
plt.plot(X[X['cluster']==1]['x'], X[X['cluster']==1]['y'], 'go', label='class2')
plt.plot(X[X['cluster']==2]['x'], X[X['cluster']==2]['y'], 'ro', label='class3')

plt.xlabel('x')
plt.ylabel('y')
plt.legend(loc=0)
plt.show()
